// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  DRIVER
  PASSENGER
}

model User {
  id           String      @id
  password     String
  role         Role
  name         String
  surname      String
  email        String      @unique
  phoneNumber  String      @unique
  username     String      @unique
  idCard       String?     @unique
  sessions     Session[]
  driverInfo   DriverInfo? @relation(fields: [driverInfoId], references: [id], onDelete: Cascade)
  driverInfoId String?     @unique
  ratings      Rating[]
  trips        Trip[]
}

model DriverInfo {
  id            String    @id @default(cuid())
  profilePic    Bytes
  User          User?
  license       License?  @relation(fields: [licenseNumber], references: [number], onDelete: Cascade)
  licenseNumber String?   @unique
  vehicle       Vehicle[]
  trips         Trip[]
}

model Vehicle {
  licensePlate String      @id
  model        String
  maxPass      Int
  DriverInfo   DriverInfo? @relation(fields: [driverInfoId], references: [id])
  driverInfoId String?
}

model License {
  number     String      @id
  scadenza   DateTime
  DriverInfo DriverInfo?
}

model Trip {
  id           String      @id @default(cuid())
  depCity      String
  arrCity      String
  depTime      DateTime
  estArrTime   DateTime
  cost         Decimal
  finished     Boolean
  note         String      @db.Text
  Users        User[]
  DriverInfo   DriverInfo? @relation(fields: [driverInfoId], references: [id])
  driverInfoId String?
}

model Rating {
  id     String  @id
  star   Int
  desc   String  @db.Text
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}
